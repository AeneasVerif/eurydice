name: Build Eurydice and run tests

on:
  push:
  pull_request:

jobs:
  check:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Build and test
        run: nix flake check -L

  charon-pin-is-forward:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # deep clone in order to get access to other commits
      - run: nix develop '.#ci' --command ./scripts/ci-check-charon-pin-is-forward.sh

  charon-pin-is-merged:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # deep clone in order to get access to other commits
      - run: nix develop '.#ci' --command ./scripts/ci-check-charon-pin-is-merged.sh

  kyber:
    needs: [check]
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - run: |
          # Flake overrides aren't recursive: if we want to use eurydice with
          # any newly pinned dependencies, we must override all of them.
          EURYDICE_REV="${{ github.sha }}"
          CHARON_REV="$(nix develop '.#ci' --command jq -r .nodes.charon.locked.rev flake.lock)"
          KRML_REV="$(nix develop '.#ci' --command jq -r .nodes.karamel.locked.rev flake.lock)"
          FSTAR_REV="$(nix develop '.#ci' --command jq -r .nodes.fstar.locked.rev flake.lock)"
          git clone https://github.com/Inria-Prosecco/circus-green
          cd circus-green
          nix flake lock --override-input charon github:aeneasverif/charon/$CHARON_REV
          nix flake lock --override-input eurydice github:aeneasverif/eurydice/$EURYDICE_REV
          nix flake lock --override-input eurydice/karamel github:FStarLang/karamel/$KRML_REV
          nix flake lock --override-input eurydice/karamel/fstar github:FStarLang/fstar/$FSTAR_REV
          ./check.sh ml-kem-small
