name: Build Eurydice and run tests

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

# Cancel previous versions of this job that are still running.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  check:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3
      - name: Build and test
        run: nix flake check -L

  charon-pin-is-forward:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # deep clone in order to get access to other commits
      - run: nix develop '.#ci' --command ./scripts/ci-check-charon-pin-is-forward.sh

  charon-pin-is-merged:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # deep clone in order to get access to other commits
      - run: nix develop '.#ci' --command ./scripts/ci-check-charon-pin-is-merged.sh

  kyber:
    needs: [check]
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      - run: |
          # Flake overrides aren't recursive: if we want to use eurydice with
          # any newly pinned dependencies, we must override all of them.
          EURYDICE_REV="${{ github.sha }}"
          CHARON_REV="$(nix develop '.#ci' --command jq -r .nodes.charon.locked.rev flake.lock)"
          git clone https://github.com/Inria-Prosecco/circus-green
          cd circus-green
          nix flake update charon --override-input charon github:aeneasverif/charon/$CHARON_REV
          nix flake update eurydice --override-input eurydice github:aeneasverif/eurydice/$EURYDICE_REV
          nix flake update libcrux --override-input libcrux github:cryspen/libcrux/a56ee5204bc9205827beef8fcdff69c5154b3ece
          nix develop --command ./update-cargo-lock.sh libcrux
          ./check.sh ml-kem-small
          # ./check.sh ml-dsa-small
