/* 
  This file was generated by KaRaMeL <https://github.com/FStarLang/karamel>

  F* version: <unknown>

 */

#ifndef array2d_H
#define array2d_H

#include "eurydice_glue.h"


#if defined(__cplusplus)
extern "C" {
#endif

<<<<<<< HEAD
bool array2d_f(uint32_t x[4U][2U]);
=======
extern bool core_cmp_impls__core__cmp__PartialEq_u32__for_u32__eq(uint32_t *x0, uint32_t *x1);

extern bool core_cmp_impls__core__cmp__PartialEq_u32__for_u32__ne(uint32_t *x0, uint32_t *x1);

/**
A monomorphic instance of Eurydice.arr
with types uint32_t
with const generics
- $2size_t
*/
typedef struct Eurydice_arr_b2_s { uint32_t data[2U]; } Eurydice_arr_b2;

/**
A monomorphic instance of Eurydice.arr
with types Eurydice_arr uint32_t[[$2size_t]]
with const generics
- $4size_t
*/
typedef struct Eurydice_arr_c0_s { Eurydice_arr_b2 data[4U]; } Eurydice_arr_c0;

bool array2d_f(Eurydice_arr_c0 x);
>>>>>>> 3d7a1f48969c69a2ca824c933a6b0159a355cef3

void array2d_main(void);

extern bool core_cmp_impls__core__cmp__PartialEq___u32__u32___eq(uint32_t *x0, uint32_t *x1);

#if defined(__cplusplus)
}
#endif

#define array2d_H_DEFINED
#endif /* array2d_H */
