/* 
  This file was generated by KaRaMeL <https://github.com/FStarLang/karamel>
  KaRaMeL invocation: ./eurydice --config /home/lingzhang/huawei/eurydice//libcrux/libcrux-ml-kem/c.yaml -funroll-loops 16 test/libcrux.llbc --keep-going --output out/test-libcrux
  F* version: <unknown>
  KaRaMeL version: c8937ea8
 */

#ifndef libcrux_mlkem512_avx2_H
#define libcrux_mlkem512_avx2_H

#include "eurydice_glue.h"


#if defined(__cplusplus)
extern "C" {
#endif

#include "libcrux_core.h"

/**
 Decapsulate ML-KEM 512

 Generates an [`MlKemSharedSecret`].
 The input is a reference to an [`MlKem512PrivateKey`] and an [`MlKem512Ciphertext`].
*/
Eurydice_arr_60
libcrux_ml_kem_mlkem512_avx2_decapsulate(
  Eurydice_arr_7f *private_key,
  Eurydice_arr_56 *ciphertext
);

/**
 Encapsulate ML-KEM 512

 Generates an ([`MlKem512Ciphertext`], [`MlKemSharedSecret`]) tuple.
 The input is a reference to an [`MlKem512PublicKey`] and [`SHARED_SECRET_SIZE`]
 bytes of `randomness`.
*/
tuple_17
libcrux_ml_kem_mlkem512_avx2_encapsulate(
  Eurydice_arr_30 *public_key,
  Eurydice_arr_60 randomness
);

/**
 Generate ML-KEM 512 Key Pair
*/
libcrux_ml_kem_types_MlKemKeyPair_3e
libcrux_ml_kem_mlkem512_avx2_generate_key_pair(libcrux_sha3_Sha3_512Digest randomness);

/**
 Validate a private key.

 Returns `true` if valid, and `false` otherwise.
*/
bool
libcrux_ml_kem_mlkem512_avx2_validate_private_key(
  Eurydice_arr_7f *private_key,
  Eurydice_arr_56 *ciphertext
);

/**
 Validate the private key only.

 Returns `true` if valid, and `false` otherwise.
*/
bool libcrux_ml_kem_mlkem512_avx2_validate_private_key_only(Eurydice_arr_7f *private_key);

/**
 Validate a public key.

 Returns `true` if valid, and `false` otherwise.
*/
bool libcrux_ml_kem_mlkem512_avx2_validate_public_key(Eurydice_arr_30 *public_key);

#if defined(__cplusplus)
}
#endif

#define libcrux_mlkem512_avx2_H_DEFINED
#endif /* libcrux_mlkem512_avx2_H */
