/* 
  This file was generated by KaRaMeL <https://github.com/FStarLang/karamel>

  F* version: <unknown>

 */

#ifndef __array_H
#define __array_H

#include "eurydice_glue.h"


#if defined(__cplusplus)
extern "C" {
#endif

typedef struct array_Foo_s
{
  uint32_t x[2U];
  uint32_t y[2U];
}
array_Foo;

#define core_panicking_AssertKind_Eq 0
#define core_panicking_AssertKind_Ne 1
#define core_panicking_AssertKind_Match 2

typedef uint8_t core_panicking_AssertKind;

array_Foo array_mk_foo(void);

array_Foo array_mk_foo2(void);

void array_mut_array(uint32_t x[2U]);

void array_mut_foo(array_Foo f);

/**
A monomorphic instance of array.mk_incr
with const generics
- K= 10
*/
void array_mk_incr_95(uint32_t ret[10U]);

/**
A monomorphic instance of array.mk_incr2.closure
with const generics
- $10size_t
*/
typedef uint32_t *array_mk_incr2_closure_40;

/**
A monomorphic instance of array.mk_incr2
with const generics
- K= 10
*/
void array_mk_incr2_95(uint32_t ret[10U]);

/**
A monomorphic instance of array.plus_one
with const generics
- K= 1
*/
void array_plus_one_74(uint32_t x[1U], uint16_t ret[1U]);

/**
A monomorphic instance of array.nested_from_fn.closure.closure
with const generics
- $4size_t
*/
typedef size_t *array_nested_from_fn_closure_closure_44;

/**
A monomorphic instance of array.nested_from_fn
with const generics
- K= 4
*/
void array_nested_from_fn_ac(size_t ret[4U][4U]);

void array_main(void);

#if defined(__cplusplus)
}
#endif

#define __array_H_DEFINED
#endif
