/* 
  This file was generated by KaRaMeL <https://github.com/FStarLang/karamel>

  F* version: <unknown>

 */

#ifndef __issue_49_H
#define __issue_49_H

#if defined(__cplusplus)
extern "C" {
#endif

#include "eurydice_glue.h"

#define core_cmp_Ordering_Less -1
#define core_cmp_Ordering_Equal 0
#define core_cmp_Ordering_Greater 1

typedef int8_t core_cmp_Ordering;

extern core_cmp_Ordering
core_cmp_impls___core__cmp__Ord_for_usize__59__cmp(size_t *x0, size_t *x1);

extern size_t core_cmp_impls___core__cmp__Ord_for_usize__59__min(size_t x0, size_t x1);

extern bool
core_cmp_impls___core__cmp__PartialEq_usize__for_usize__21__eq(size_t *x0, size_t *x1);

#define core_option_None 0
#define core_option_Some 1

typedef uint8_t core_option_Option_77_tags;

/**
A monomorphic instance of core.option.Option
with types core_cmp_Ordering

*/
typedef struct core_option_Option_77_s
{
  core_option_Option_77_tags tag;
  core_cmp_Ordering f0;
}
core_option_Option_77;

extern core_option_Option_77
core_cmp_impls___core__cmp__PartialOrd_usize__for_usize__58__partial_cmp(
  size_t *x0,
  size_t *x1
);

#define core_panicking_AssertKind_Eq 0
#define core_panicking_AssertKind_Ne 1
#define core_panicking_AssertKind_Match 2

typedef uint8_t core_panicking_AssertKind;

size_t issue_49_f(size_t a, size_t b);

void issue_49_main(void);

#if defined(__cplusplus)
}
#endif

#define __issue_49_H_DEFINED
#endif
