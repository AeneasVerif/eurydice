/* 
  This file was generated by KaRaMeL <https://github.com/FStarLang/karamel>

  F* version: <unknown>

 */

#ifndef where_clauses_simple_H
#define where_clauses_simple_H

#include "eurydice_glue.h"


#if defined(__cplusplus)
extern "C" {
#endif

extern uint64_t core_clone_impls__core__clone__Clone_for_u64__clone(const uint64_t *x0);

extern size_t core_clone_impls__core__clone__Clone_for_usize__clone(const size_t *x0);

static inline uint64_t core_convert_num__core__convert__From_u16__for_u64__from(uint16_t x0);

static inline size_t core_convert_num__core__convert__From_u16__for_usize__from(uint16_t x0);

#define core_panicking_AssertKind_Eq 0
#define core_panicking_AssertKind_Ne 1
#define core_panicking_AssertKind_Match 2

typedef uint8_t core_panicking_AssertKind;

/**
This function found in impl {where_clauses_simple::Ops<K> for usize}
*/
/**
A monomorphic instance of where_clauses_simple.of_u16_81
with const generics
- K= 3
*/
size_t where_clauses_simple_of_u16_81_e0(uint16_t x);

/**
This function found in impl {where_clauses_simple::Ops<K> for usize}
*/
/**
A monomorphic instance of where_clauses_simple.add_81
with const generics
- K= 3
*/
size_t where_clauses_simple_add_81_e0(uint16_t x[3U], size_t y);

/**
A monomorphic instance of where_clauses_simple.fn_k
with types size_t
with const generics
- K= 3
*/
size_t where_clauses_simple_fn_k_71(void);

void where_clauses_simple_k_calls_k(void);

/**
This function found in impl {where_clauses_simple::Ops<1: usize> for u64}
*/
uint64_t where_clauses_simple_add_8e(uint16_t x[1U], uint64_t y);

/**
This function found in impl {where_clauses_simple::Ops<1: usize> for u64}
*/
uint64_t where_clauses_simple_of_u16_8e(uint16_t x);

/**
A monomorphic instance of where_clauses_simple.fn_k
with types uint64_t
with const generics
- K= 1
*/
uint64_t where_clauses_simple_fn_k_3a(void);

void where_clauses_simple_k_calls_one(void);

/**
This function found in impl {where_clauses_simple::Ops<K> for usize}
*/
/**
A monomorphic instance of where_clauses_simple.of_u16_81
with const generics
- K= 1
*/
size_t where_clauses_simple_of_u16_81_74(uint16_t x);

/**
This function found in impl {where_clauses_simple::Ops<K> for usize}
*/
/**
A monomorphic instance of where_clauses_simple.add_81
with const generics
- K= 1
*/
size_t where_clauses_simple_add_81_74(uint16_t x[1U], size_t y);

/**
A monomorphic instance of where_clauses_simple.fn_1
with types size_t
with const generics

*/
size_t where_clauses_simple_fn_1_e6(void);

void where_clauses_simple_one_calls_k(void);

/**
A monomorphic instance of where_clauses_simple.fn_1
with types uint64_t
with const generics

*/
uint64_t where_clauses_simple_fn_1_54(void);

void where_clauses_simple_one_calls_one(void);

/**
A monomorphic instance of K.
with types uint64_t, size_t

*/
typedef struct tuple_65_s
{
  uint64_t fst;
  size_t snd;
}
tuple_65;

/**
A monomorphic instance of where_clauses_simple.double
with types uint64_t, size_t
with const generics

*/
tuple_65 where_clauses_simple_double_21(uint64_t x, size_t y);

/**
A monomorphic instance of K.
with types size_t, uint64_t

*/
typedef struct tuple_b6_s
{
  size_t fst;
  uint64_t snd;
}
tuple_b6;

/**
A monomorphic instance of where_clauses_simple.double_k
with types size_t, uint64_t
with const generics
- K= 3
*/
tuple_b6 where_clauses_simple_double_k_7b(size_t x, uint64_t y);

void where_clauses_simple_main(void);

#if defined(__cplusplus)
}
#endif

#define where_clauses_simple_H_DEFINED
#endif /* where_clauses_simple_H */
