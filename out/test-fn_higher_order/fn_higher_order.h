/* 
  This file was generated by KaRaMeL <https://github.com/FStarLang/karamel>

  F* version: <unknown>

 */

#ifndef fn_higher_order_H
#define fn_higher_order_H

#include "eurydice_glue.h"


#if defined(__cplusplus)
extern "C" {
#endif

#include "Eurydice.h"

extern int32_t core_clone_impls__core__clone__Clone___i32___clone(int32_t *x0);

extern size_t core_clone_impls__core__clone__Clone___usize___clone(size_t *x0);

#define core_cmp_Ordering_Less -1
#define core_cmp_Ordering_Equal 0
#define core_cmp_Ordering_Greater 1

typedef int8_t core_cmp_Ordering;

extern bool core_cmp_impls__core__cmp__PartialEq___usize__usize___eq(size_t *x0, size_t *x1);

#define core_option_Option_None 0
#define core_option_Option_Some 1

typedef uint8_t core_option_Option__core__cmp__Ordering__tags;

typedef struct core_option_Option__core__cmp__Ordering__s
{
  core_option_Option__core__cmp__Ordering__tags tag;
  core_cmp_Ordering f0;
}
core_option_Option__core__cmp__Ordering_;

extern core_option_Option__core__cmp__Ordering_
core_cmp_impls__core__cmp__PartialOrd___usize__usize___partial_cmp(size_t *x0, size_t *x1);

typedef struct core_option_Option__usize__s
{
  core_option_Option__core__cmp__Ordering__tags tag;
  size_t f0;
}
core_option_Option__usize_;

extern core_option_Option__usize_
core_iter_range__core__iter__range__Step___usize___backward_checked(size_t x0, size_t x1);

extern core_option_Option__usize_
core_iter_range__core__iter__range__Step___usize___forward_checked(size_t x0, size_t x1);

/**
A monomorphic instance of K.
with types size_t, core_option_Option_<usize>

*/
typedef struct tuple_f6_s
{
  size_t fst;
  core_option_Option__usize_ snd;
}
tuple_f6;

extern tuple_f6
core_iter_range__core__iter__range__Step___usize___steps_between(size_t *x0, size_t *x1);

extern core_option_Option__usize_
core_iter_range__core__iter__traits__iterator__Iterator___core__ops__range__Range___usize____next__usize_(
  core_ops_range_Range__usize_ *x0
);

extern core_ops_range_Range__usize_
core_iter_traits_collect__core__iter__traits__collect__IntoIterator___core__ops__range__Range___usize____into_iter__core__ops__range__Range___usize__(
  core_ops_range_Range__usize_ x0
);

int32_t fn_higher_order_empty_ptr(int32_t (*f)(void));

<<<<<<< HEAD
size_t fn_higher_order_sum_lst__5usize_(size_t *lst);

size_t fn_higher_order_id__usize_(size_t r);
=======
/**
A monomorphic instance of Eurydice.arr
with types int32_t
with const generics
- $3size_t
*/
typedef struct Eurydice_arr_8d_s { int32_t data[3U]; } Eurydice_arr_8d;

int32_t fn_higher_order_more_sum_lst(Eurydice_arr_8d *l);

/**
A monomorphic instance of Eurydice.arr
with types size_t
with const generics
- $5size_t
*/
typedef struct Eurydice_arr_99_s { size_t data[5U]; } Eurydice_arr_99;
>>>>>>> 3d7a1f48969c69a2ca824c933a6b0159a355cef3

size_t
<<<<<<< HEAD
fn_higher_order_compose_cg_apply__usize__usize__usize__5usize_(
  size_t (*f)(size_t *x0),
=======
fn_higher_order_compose_cg_apply_fd(
  size_t (*f)(Eurydice_arr_99 *x0),
>>>>>>> 3d7a1f48969c69a2ca824c933a6b0159a355cef3
  size_t (*g)(size_t x0),
  Eurydice_arr_99 *arg
);

<<<<<<< HEAD
int32_t fn_higher_order_more_sum_lst(int32_t *l);
=======
/**
A monomorphic instance of fn_higher_order.sum_lst
with const generics
- N= 5
*/
size_t fn_higher_order_sum_lst_c9(Eurydice_arr_99 *lst);
>>>>>>> 3d7a1f48969c69a2ca824c933a6b0159a355cef3

int32_t fn_higher_order_id__i32_(int32_t r);

int32_t
<<<<<<< HEAD
fn_higher_order_compose_cg_apply__i32__i32__i32__3usize_(
  int32_t (*f)(int32_t *x0),
=======
fn_higher_order_compose_cg_apply_82(
  int32_t (*f)(Eurydice_arr_8d *x0),
>>>>>>> 3d7a1f48969c69a2ca824c933a6b0159a355cef3
  int32_t (*g)(int32_t x0),
  Eurydice_arr_8d *arg
);

void fn_higher_order_use_compose_cg(void);

void fn_higher_order_main(void);

void fn_higher_order_unit_empty_ptr(void (*f)(void));

#if defined(__cplusplus)
}
#endif

#define fn_higher_order_H_DEFINED
#endif /* fn_higher_order_H */
