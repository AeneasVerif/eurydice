/* 
  This file was generated by KaRaMeL <https://github.com/FStarLang/karamel>

  F* version: <unknown>

 */

#ifndef __where_clauses_closures_H
#define __where_clauses_closures_H

#include "eurydice_glue.h"


#if defined(__cplusplus)
extern "C" {
#endif

extern size_t core_clone_impls___core__clone__Clone_for_usize__5__clone(size_t *x0);

#define core_panicking_AssertKind_Eq 0
#define core_panicking_AssertKind_Ne 1
#define core_panicking_AssertKind_Match 2

typedef uint8_t core_panicking_AssertKind;

/**
This function found in impl {(where_clauses_closures::Ops<1: usize> for usize)}
*/
size_t where_clauses_closures_zero_d6(void);

/**
This function found in impl {(where_clauses_closures::Ops<1: usize> for usize)}
*/
size_t where_clauses_closures_of_usize_d6(size_t x);

/**
This function found in impl {(core::ops::function::FnMut<(usize), T> for where_clauses_closures::test::closure<T, K>[TraitClause@0, TraitClause@1, TraitClause@2])}
*/
/**
A monomorphic instance of where_clauses_closures.test.call_mut_c3
with types size_t
with const generics
- K= 1
*/
size_t where_clauses_closures_test_call_mut_c3_e3(void **_, size_t tupled_args);

/**
This function found in impl {(core::ops::function::FnOnce<(usize), T> for where_clauses_closures::test::closure<T, K>[TraitClause@0, TraitClause@1, TraitClause@2])}
*/
/**
A monomorphic instance of where_clauses_closures.test.call_once_ef
with types size_t
with const generics
- K= 1
*/
size_t where_clauses_closures_test_call_once_ef_e3(size_t _);

typedef struct size_t_x2_s
{
  size_t fst;
  size_t snd;
}
size_t_x2;

/**
A monomorphic instance of where_clauses_closures.test
with types size_t
with const generics
- K= 1
*/
size_t_x2 where_clauses_closures_test_e3(void);

void where_clauses_closures_main(void);

#if defined(__cplusplus)
}
#endif

#define __where_clauses_closures_H_DEFINED
#endif
